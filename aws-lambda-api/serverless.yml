service: aws-lambda-api-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: api
  profile: serverless-cli
  region: us-east-2
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:us-east-2:*:*'

functions:
  planets:
    handler: controller/planetController.planets
    events:
      - http:
          method: get
          path: /planets

  planetById:
    handler: controller/planetController.planetById
    events:
      - http:
          method: get
          path: /planets/{id}
  
  planetsGetAllBD:
    handler: controller/planetController.planetsGetAllBD
    events:
      - http:
          method: get
          path: /planetsGetAllBD

  planetsGetByIdBD:
    handler: controller/planetController.planetsGetByIdBD
    events:
      - http:
          method: get
          path: /planetsGetByIdBD/{ID}
  
  planetsCreateBD:
    handler: controller/planetController.planetsCreateBD
    events:
      - http:
          method: post
          path: /planetsCreateBD
  
  films:
    handler: controller/filmController.films
    events:
      - http:
          method: get
          path: /films

  filmById:
    handler: controller/filmController.filmById
    events:
      - http:
          method: get
          path: /films/{id}

  people:
    handler: controller/personController.people
    events:
      - http:
          method: get
          path: /people

  personById:
    handler: controller/personController.personById
    events:
      - http:
          method: get
          path: /people/{id}

  species:
    handler: controller/specieController.species
    events:
      - http:
          method: get
          path: /species

  specieById:
    handler: controller/specieController.specieById
    events:
      - http:
          method: get
          path: /species/{id}
  

custom:
  tableName: starwars

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
